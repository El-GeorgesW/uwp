<views:BaseCloudDrivePage
    x:Class="MegaApp.Views.CloudDrivePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:MegaApp.Behaviors"
    xmlns:breadcrumb="using:GoedWare.Controls.Breadcrumb"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:MegaApp.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:userControls="using:MegaApp.UserControls"
    xmlns:viewModels="using:MegaApp.ViewModels"
    xmlns:views="using:MegaApp.Views"
    d:DataContext="{d:DesignInstance viewModels:CloudDriveViewModel}"
    mc:Ignorable="d">

    <!--  PAGE RESOURCES  -->
    <Page.Resources>
        <CollectionViewSource
            x:Name="CameraUploadsCollection"
            IsSourceGrouped="true"
            ItemsPath="ItemCollection.Items"
            Source="{Binding CameraUploads.Items}" />
    </Page.Resources>

    <SplitView
        x:Name="CloudDriveSplitView"
        DisplayMode="Inline"
        IsPaneOpen="{x:Bind ViewModel.ActiveFolderView.IsPanelOpen, Mode=OneWay}"
        PaneClosed="OnPaneClosed"
        PanePlacement="Right">
        <SplitView.Pane>
            <Grid>
                <userControls:NodeInformationPanel
                    x:Name="InformationPanelControl"
                    DataContext="{Binding ActiveFolderView}"
                    Background="{StaticResource MegaAppBackgroundBrush}"
                    Foreground="{StaticResource MegaAppForegroundBrush}"
                    Node="{Binding ItemCollection.FocusedItem}"
                    Visibility="{Binding VisiblePanel, ConverterParameter='Information', Converter={StaticResource PanelTypeToVisibilityConverter}}" />
                
                <userControls:CopyMoveImportPanel
                    x:Name="CopyOrMovePanelControl"
                    DataContext="{Binding ActiveFolderView}"
                    Background="{StaticResource MegaAppBackgroundBrush}"
                    Foreground="{StaticResource MegaAppForegroundBrush}"
                    Visibility="{Binding VisiblePanel, ConverterParameter='CopyMoveImport', Converter={StaticResource PanelTypeToVisibilityConverter}}" />
            </Grid>
        </SplitView.Pane>

        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="{StaticResource PageHeaderRowHeight}" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="TopRowGrid" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    x:Name="SectionNameText"
                    Grid.Row="0" Grid.Column="0"
                    Margin="24,14,0,0"
                    FontSize="12"
                    Foreground="{StaticResource MegaRedColorBrush}"
                    Text="{x:Bind ViewModel.CloudDriveNameText, Mode=OneTime}" />

                <!--  TOP COMMAND BAR AREA (ONLY DESKTOP)  -->
                <Grid 
                    Grid.Row="0" Grid.Column="1"
                    Visibility="{Binding ActiveFolderView.IsPanelOpen, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <Grid x:Name="TopCommandBar">

                        <!--  TOP COMMAND BAR (ONLY DESKTOP)  -->
                        <CommandBar
                            Background="Transparent"
                            extensions:CommandBarExtensions.HideMoreButton="True">
                            <AppBarButton
                                DataContext="{Binding ActiveFolderView}"
                                Click="OnButtonClick"
                                Command="{Binding AddFolderCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding AddFolderText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding AddFolderText, Mode=OneTime}"
                                Visibility="{Binding Folder, ConverterParameter='newfolder', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding AddFolderPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                DataContext="{Binding ActiveFolderView}"
                                Click="OnButtonClick"
                                Command="{Binding UploadCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding UploadText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding UploadText, Mode=OneTime}"
                                Visibility="{Binding Folder, ConverterParameter='upload', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding UploadPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                Click="OnButtonClick"
                                Command="{Binding OpenLinkCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding OpenLinkText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding OpenLinkText, Mode=OneTime}"
                                Visibility="{Binding ActiveFolderView.Folder, ConverterParameter='openlink', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding OpenLinkPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                DataContext="{Binding ActiveFolderView}"
                                Click="OnButtonClick"
                                Command="{Binding DownloadCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding DownloadText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding DownloadText, Mode=OneTime}"
                                Visibility="{Binding Folder, ConverterParameter='download', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding DownloadPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                DataContext="{Binding ActiveFolderView}"
                                Click="OnButtonClick"
                                Command="{Binding CopyOrMoveCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding CopyOrMoveText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding CopyOrMoveText, Mode=OneTime}"
                                Visibility="{Binding Folder, ConverterParameter='copyormove', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding CopyOrMovePathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                DataContext="{Binding ActiveFolderView}"
                                Click="OnButtonClick"
                                Command="{Binding RestoreCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding RestoreText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding RestoreText, Mode=OneTime}"
                                Visibility="{Binding Folder, ConverterParameter='restore', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <Viewbox MaxWidth="14" MaxHeight="14">
                                    <FontIcon Glyph="&#xE777;" />
                                </Viewbox>
                            </AppBarButton>
                            <AppBarButton
                                DataContext="{Binding ActiveFolderView}"
                                Click="OnButtonClick"
                                Command="{Binding RemoveCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding RemoveText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding RemoveText, Mode=OneTime}"
                                Visibility="{Binding Folder, ConverterParameter='remove', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding RubbishBinPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                Click="OnButtonClick"
                                Command="{Binding ClearRubbishBinCommand}"
                                IsEnabled="{x:Bind ViewModel.IsClearRubbishBinEnabled, Mode=OneWay}"
                                Label="{Binding ClearRubbishBinText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding ClearRubbishBinText, Mode=OneTime}"
                                Visibility="{Binding ActiveFolderView.Folder, ConverterParameter='clean', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding EmptyRubbishBinPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                DataContext="{Binding ActiveFolderView}"
                                Command="{Binding ItemCollection.MultiSelectCommand}"
                                Label="{Binding MultiSelectText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding MultiSelectText, Mode=OneTime}"
                                Visibility="{Binding ItemCollection.IsMultiSelectActive, Mode=OneWay}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding MultiSelectPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </CommandBar>
                    </Grid>
                </Grid>

                <!--  CLOSE PANEL TOP COMMAND BAR (ONLY DESKTOP)  -->
                <CommandBar 
                    DataContext="{Binding ActiveFolderView}"
                    Grid.Row="0" Grid.Column="2"
                    Background="Transparent"
                    extensions:CommandBarExtensions.HideMoreButton="True"
                    Visibility="{Binding IsPanelOpen, Converter={StaticResource BoolToVisibilityConverter}}">
                    <AppBarButton
                        Command="{Binding ClosePanelCommand}"
                        Label="{Binding ClosePanelText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding ClosePanelText, Mode=OneTime}">
                        <Viewbox MaxHeight="16" MaxWidth="16">
                            <FontIcon Glyph="&#xEA5B;"/>
                        </Viewbox>
                    </AppBarButton>
                </CommandBar>

                <!--  PERMANENT TOP COMMAND BAR (ALL DEVICES)  -->
                <Grid 
                    DataContext="{Binding ActiveFolderView}"
                    Grid.Row="0"
                    Grid.Column="2"
                    Visibility="{Binding Type, ConverterParameter=CameraUploads, Converter={StaticResource InverseContainerTypeToVisibilityConverter}}">
                    <CommandBar
                        Background="Transparent"
                        extensions:CommandBarExtensions.HideMoreButton="True"
                        IsEnabled="{Binding IsEmpty, Converter={StaticResource InverseBoolConverter}, Mode=OneWay}"
                        Visibility="{Binding IsPanelOpen, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <AppBarSeparator 
                            x:Name="PermanentTopCommandBarSeparator"
                            Margin="-12,0"
                            VerticalAlignment="Center"/>
                        <AppBarButton
                            x:Name="BtnSort"
                            Click="OnSortClick"
                            Label="{Binding SortByText}"
                            Style="{StaticResource MegaAppBarButtonStyle}"
                            ToolTipService.ToolTip="{Binding SortByText}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{Binding SortByPathData, Mode=OneTime}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            x:Name="BtnChangeView"
                            Click="OnButtonClick"
                            Command="{Binding ChangeViewCommand}"
                            Label="{Binding NextViewButtonLabelText}"
                            Style="{StaticResource MegaAppBarButtonStyle}"
                            ToolTipService.ToolTip="{Binding NextViewButtonLabelText}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{Binding NextViewButtonPathData, Mode=OneWay}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                    </CommandBar>
                </Grid>
            </Grid>
            
            <ContentPresenter Grid.Row="1" ContentTemplate="{StaticResource OfflineBannerSpace}" />
            
            <Grid x:Name="MainGrid" Grid.Row="2">
                <Pivot
                    x:Name="MainPivot"
                    HeaderTemplate="{StaticResource MegaPivoHeaderTemplate}"
                    SelectionChanged="OnPivotSelectionChanged">
                    <PivotItem
                        x:Name="CloudDrivePivot"
                        CacheMode="{x:Null}"
                        Header="{Binding CloudDriveNameText}">
                        <userControls:FolderExplorer
                            x:Name="CloudDriveExplorer"
                            Background="{StaticResource MegaAppBackgroundBrush}"
                            Foreground="{StaticResource MegaAppForegroundBrush}"
                            Folder="{x:Bind ViewModel.CloudDrive, Mode=OneWay}"/>
                    </PivotItem>
                    <PivotItem
                        x:Name="CameraUploadsPivot"
                        CacheMode="{x:Null}"
                        Header="{Binding CameraUploadsNameText}">
                        <Grid
                            x:Name="CameraUploadsRoot"
                            Grid.Row="1"
                            Margin="{StaticResource RootGridMargin}"
                            Background="Transparent"
                            DataContext="{Binding CameraUploads}">
                            <Grid Visibility="{Binding ItemCollection.HasItems, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <ContentControl Template="{StaticResource SelectAllCheckBoxWithOrderTypeAndNumberOfItems}"/>
                                    <ContentControl Template="{StaticResource OrderTypeAndNumberOfItems}"/>
                                </Grid>
                                <SemanticZoom
                                    Grid.Row="1"
                                    Margin="-12,-12,-12,0"
                                    ScrollViewer.ZoomMode="Enabled">
                                    <SemanticZoom.ZoomedOutView>
                                        <ListView
                                            ItemTemplate="{StaticResource CameraUploadsGroupItem}" 
                                            ItemsSource="{x:Bind CameraUploadsCollection.View.CollectionGroups}" />
                                    </SemanticZoom.ZoomedOutView>
                                    <SemanticZoom.ZoomedInView>
                                        <GridView
                                            x:Name="GridViewCameraUploads"
                                            Margin="12,0,0,0"
                                            Padding="2,4"
                                            Background="{StaticResource MegaAppBackgroundBrush}"
                                            DoubleTapped="OnItemDoubleTapped"
                                            IsMultiSelectCheckBoxEnabled="{Binding ItemCollection.IsMultiSelectActive}"
                                            ItemTemplate="{StaticResource CameraUploadsGridViewFileItemContent}"
                                            ItemsSource="{Binding Source={StaticResource CameraUploadsCollection}}"
                                            RightTapped="OnRightItemTapped"
                                            Tapped="OnItemTapped">
                                            <interactivity:Interaction.Behaviors>
                                                <behaviors:MultiSelect SelectedItems="{Binding ItemCollection.SelectedItems, Mode=TwoWay}" />
                                                <core:EventTriggerBehavior EventName="SelectionChanged">
                                                    <core:EventTriggerBehavior.Actions>
                                                        <core:InvokeCommandAction Command="{Binding ItemCollection.SelectionChangedCommand}" />
                                                    </core:EventTriggerBehavior.Actions>
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                            <GridView.GroupStyle>
                                                <GroupStyle
                                                    HeaderContainerStyle="{StaticResource MegaGroupGridViewHeaderItemStyle}"
                                                    HeaderTemplate="{StaticResource CameraUploadsGroupHeader}"
                                                    HidesIfEmpty="True" />
                                            </GridView.GroupStyle>
                                        </GridView>
                                    </SemanticZoom.ZoomedInView>
                                </SemanticZoom>
                            </Grid>
                            <userControls:TogglePanel
                                x:Name="CameraUploadsTogglePanelControl"
                                VerticalAlignment="Center"
                                Background="{StaticResource MegaAppBackgroundBrush}"
                                Foreground="{StaticResource MegaAppForegroundBrush}"
                                HeaderText="{Binding EmptyContentHeaderText, Mode=OneTime}"
                                IsOn="{Binding CameraUploadsTaskIsOn, Mode=TwoWay}"
                                IsVisible="{Binding ItemCollection.HasItems, Converter={StaticResource InverseBoolConverter}}"
                                SubHeaderMargin="0,14,0,28"
                                SubHeaderText="{Binding EmptyContentSubHeaderText, Mode=OneTime}"
                                ToggleAlignment="Below"
                                VerticalContentAlignment="Center">
                                <userControls:TogglePanel.SubHeaderForeground>
                                    <SolidColorBrush Opacity="0.6" Color="{ThemeResource MegaAppForeground}" />
                                </userControls:TogglePanel.SubHeaderForeground>
                            </userControls:TogglePanel>
                        </Grid>
                    </PivotItem>
                    <PivotItem
                        x:Name="RubbishBinPivot"
                        CacheMode="{x:Null}"
                        Header="{Binding RubbishBinNameText}">
                        <userControls:FolderExplorer
                            x:Name="RubbishBinExplorer"
                            Grid.Row="1"
                            Background="{StaticResource MegaAppBackgroundBrush}"
                            Foreground="{StaticResource MegaAppForegroundBrush}"
                            Folder="{x:Bind ViewModel.RubbishBin, Mode=OneWay}"/>
                    </PivotItem>
                </Pivot>
            </Grid>

            <!--  BOTTOM COMMAND BAR AREA (MOBILE DEVICES)  -->
            <Grid x:Name="BottomCommandBar" Grid.Row="3">
                <CommandBar Style="{StaticResource MegaCommandBarStyle}">
                    <AppBarButton
                        DataContext="{Binding ActiveFolderView}"
                        Click="OnButtonClick"
                        Command="{Binding AddFolderCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding AddFolderText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding AddFolderText, Mode=OneTime}"
                        Visibility="{Binding Folder, ConverterParameter='newfolder', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding AddFolderPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        DataContext="{Binding ActiveFolderView}"
                        Click="OnButtonClick"
                        Command="{Binding UploadCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding UploadText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding UploadText, Mode=OneTime}"
                        Visibility="{Binding Folder, ConverterParameter='upload', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding UploadPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Click="OnButtonClick"
                        Command="{Binding OpenLinkCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding OpenLinkText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding OpenLinkText, Mode=OneTime}"
                        Visibility="{Binding ActiveFolderView.Folder, ConverterParameter='openlink', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding OpenLinkPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        DataContext="{Binding ActiveFolderView}"
                        Click="OnButtonClick"
                        Command="{Binding DownloadCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding DownloadText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding DownloadText, Mode=OneTime}"
                        Visibility="{Binding Folder, ConverterParameter='download', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding DownloadPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        DataContext="{Binding ActiveFolderView}"
                        Click="OnButtonClick"
                        Command="{Binding CopyOrMoveCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding CopyOrMoveText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding CopyOrMoveText, Mode=OneTime}"
                        Visibility="{Binding Folder, ConverterParameter='copyormove', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding CopyOrMovePathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        DataContext="{Binding ActiveFolderView}"
                        Click="OnButtonClick"
                        Command="{Binding RestoreCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding RestoreText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding RestoreText, Mode=OneTime}"
                        Visibility="{Binding Folder, ConverterParameter='restore', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <Viewbox MaxWidth="14" MaxHeight="14">
                            <FontIcon Glyph="&#xE777;" />
                        </Viewbox>
                    </AppBarButton>
                    <AppBarButton
                        DataContext="{Binding ActiveFolderView}"
                        Click="OnButtonClick"
                        Command="{Binding RemoveCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding RemoveText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding RemoveText, Mode=OneTime}"
                        Visibility="{Binding Folder, ConverterParameter='remove', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding RubbishBinPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Click="OnButtonClick"
                        Command="{Binding ClearRubbishBinCommand}"
                        IsEnabled="{x:Bind ViewModel.IsClearRubbishBinEnabled, Mode=OneWay}"
                        Label="{Binding ClearRubbishBinText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding ClearRubbishBinText, Mode=OneTime}"
                        Visibility="{Binding ActiveFolderView.Folder, ConverterParameter='clean', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding EmptyRubbishBinPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        DataContext="{Binding ActiveFolderView}"
                        Click="OnButtonClick"
                        Command="{Binding ItemCollection.MultiSelectCommand}"
                        IsEnabled="{Binding IsEmpty, Converter={StaticResource InverseBoolConverter}, Mode=OneWay}"
                        Label="{Binding MultiSelectText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding MultiSelectText, Mode=OneTime}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding MultiSelectPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar>
            </Grid>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GridViewCameraUploads.SelectionMode" Value="Extended" />
                        <Setter Target="TopCommandBar.Visibility" Value="Visible" />
                        <Setter Target="BottomCommandBar.Visibility" Value="Collapsed" />
                        <Setter Target="PermanentTopCommandBarSeparator.Visibility" Value="Visible" />
                        <Setter Target="TopRowGrid.Background" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GridViewCameraUploads.SelectionMode" Value="Single" />
                        <Setter Target="TopCommandBar.Visibility" Value="Collapsed" />
                        <Setter Target="BottomCommandBar.Visibility" Value="Visible" />
                        <Setter Target="PermanentTopCommandBarSeparator.Visibility" Value="Collapsed" />
                        <Setter Target="TopRowGrid.Background" Value="{ThemeResource MegaAppBarBackgroundBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="64,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="0,0,-12,0" />
                        <Setter Target="CloudDriveSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="CloudDriveExplorer.Margin" Value="0,0,12,0" />
                        <Setter Target="RubbishBinExplorer.Margin" Value="0,0,12,0" />
                        <Setter Target="GridViewCameraUploads.Margin" Value="12,0,0,0" />
                        <Setter Target="CameraUploadsTogglePanelControl.Padding" Value="16,18,0,16" />
                        <Setter Target="CameraUploadsTogglePanelControl.HeaderFontSize" Value="24" />
                        <Setter Target="CameraUploadsTogglePanelControl.SubHeaderFontSize" Value="16" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="24,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="12,0,0,0" />
                        <Setter Target="CloudDriveSplitView.DisplayMode" Value="Inline" />
                        <Setter Target="CloudDriveExplorer.Margin" Value="0,0,0,0" />
                        <Setter Target="RubbishBinExplorer.Margin" Value="0,0,0,0" />
                        <Setter Target="GridViewCameraUploads.Margin" Value="12,0,0,0" />
                        <Setter Target="CameraUploadsTogglePanelControl.Padding" Value="97,0,0,16" />
                        <Setter Target="CameraUploadsTogglePanelControl.HeaderFontSize" Value="24" />
                        <Setter Target="CameraUploadsTogglePanelControl.SubHeaderFontSize" Value="16" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="24,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="12,0,0,0" />
                        <Setter Target="CloudDriveSplitView.DisplayMode" Value="Inline" />
                        <Setter Target="CloudDriveExplorer.Margin" Value="0,0,0,0" />
                        <Setter Target="RubbishBinExplorer.Margin" Value="0,0,0,0" />
                        <Setter Target="GridViewCameraUploads.Margin" Value="12,0,0,0" />
                        <Setter Target="CameraUploadsTogglePanelControl.Padding" Value="178,0,0,16" />
                        <Setter Target="CameraUploadsTogglePanelControl.HeaderFontSize" Value="44" />
                        <Setter Target="CameraUploadsTogglePanelControl.SubHeaderFontSize" Value="18" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </SplitView>
</views:BaseCloudDrivePage>