<views:BaseMainPage
    x:Class="MegaApp.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:MegaApp.Views"
    xmlns:userControls="using:MegaApp.UserControls"
    xmlns:viewModels="using:MegaApp.ViewModels"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    mc:Ignorable="d"    
    d:DataContext="{d:DesignInstance viewModels:MainViewModel}">

    <Page.Resources>
        <converters:StringVisibilityConverter x:Key="StringVisibilityConverter"/>
        <DataTemplate 
            x:Key="MenuItemTemplate" 
            x:DataType="userControls:MenuItem">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Grid.Column="0"
                    Content="{x:Bind Icon}"
                    ToolTipService.ToolTip="{x:Bind ToolTip}"
                    HorizontalAlignment="Stretch"
                    AutomationProperties.AccessibilityView="Raw"/>
                <Grid 
                    Grid.Column="0"
                    Visibility="{x:Bind IsMyAccountMenuItem, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneTime}">
                    <Ellipse
                        Width="33" Height="33"
                        ToolTipService.ToolTip="{x:Bind ToolTip}"
                        HorizontalAlignment="Stretch"
                        Stroke="{ThemeResource MegaAppForeground}"
                        AutomationProperties.AccessibilityView="Raw"
                        Visibility="{x:Bind UserData.AvatarUri, Converter={StaticResource InverseStringVisibilityConverter}, Mode=OneWay}">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{x:Bind UserData.AvatarColor, Mode=OneWay}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                    <TextBlock
                        Text="{x:Bind UserData.AvatarLetter, Mode=OneWay}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Foreground="White"
                        Visibility="{x:Bind UserData.AvatarUri, Converter={StaticResource InverseStringVisibilityConverter}, Mode=OneWay}"/>
                    <Ellipse
                        Width="33" Height="33"
                        ToolTipService.ToolTip="{x:Bind ToolTip}"
                        HorizontalAlignment="Stretch"
                        Stroke="{ThemeResource MegaAppForeground}"
                        AutomationProperties.AccessibilityView="Raw"
                        Visibility="{x:Bind UserData.AvatarUri, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding UserData.AvatarUri, Mode=OneWay}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                </Grid>                
                <StackPanel 
                    Orientation="Vertical"
                    VerticalAlignment="Center"
                    Grid.Column="1"
                    Margin="10,5,10,6">
                    <TextBlock
                        Text="{x:Bind Label, Mode=OneWay}" 
                        FontSize="16" 
                        VerticalAlignment="Center"/>
                    <TextBlock
                        Text="{x:Bind SubLabel, Mode=OneWay}" 
                        FontSize="12" 
                        VerticalAlignment="Center"
                        Visibility="{x:Bind SubLabel, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}"
                        Opacity="0.6"/>
                </StackPanel>                
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{StaticResource MegaHamburgerMenuBackgroundBrush}">
        <userControls:HamburgerMenuEx
            x:Name="HamburgerMenuControl"
            ItemsSource="{Binding MenuItems}"
            SelectedMenuItem="{Binding SelectedItem, Mode=TwoWay}"
            OptionsItemsSource="{Binding OptionItems}"
            SelectedOptionItem="{Binding SelectedOptionItem, Mode=TwoWay}"
            ItemTemplate="{StaticResource MenuItemTemplate}"
            OptionsItemTemplate="{StaticResource MenuItemTemplate}"
            PaneBackground="{StaticResource MegaHamburgerMenuBackgroundBrush}"
            Foreground="{StaticResource MegaHamburgerMenuForegroundBrush}"
            ItemClick="OnHamburgerMenuControlItemClick"
            OptionsItemClick="OnHamburgerMenuControlItemClick"
            VisualStateNarrowMinWidth="0"
            VisualStateNormalMinWidth="600"
            VisualStateWideMinWidth="1200">
            <userControls:FrameEx x:Name="ContentFrame"/>
        </userControls:HamburgerMenuEx>

        <userControls:ProgressPanel
            x:Name="ProgressPanelControl"
            Grid.Row="1"
            Background="{StaticResource MegaAppBackgroundBrush}"
            Foreground="{StaticResource MegaAppForegroundBrush}"
            HeaderText="{Binding Path=ProgressHeaderText}"
            IsVisible="{Binding IsBusy}"
            SubHeaderMargin="0, 14, 0 , 0"
            SubHeaderText="{Binding Path=ProgressSubHeaderText}">
            <userControls:ProgressPanel.SubHeaderForeground>
                <SolidColorBrush Opacity="0.6" Color="{ThemeResource MegaAppForeground}" />
            </userControls:ProgressPanel.SubHeaderForeground>
        </userControls:ProgressPanel>
        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ProgressPanelControl.Padding" Value="16, 18, 0, 16" />
                        <Setter Target="ProgressPanelControl.ProgressAlignment" Value="Below" />
                        <Setter Target="ProgressPanelControl.VerticalContentAlignment" Value="Top" />
                        <Setter Target="ProgressPanelControl.HeaderFontSize" Value="24" />
                        <Setter Target="ProgressPanelControl.SubHeaderFontSize" Value="16" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ProgressPanelControl.Padding" Value="178, 18, 0, 16" />
                        <Setter Target="ProgressPanelControl.ProgressAlignment" Value="Right" />
                        <Setter Target="ProgressPanelControl.VerticalContentAlignment" Value="Center" />
                        <Setter Target="ProgressPanelControl.HeaderFontSize" Value="44" />
                        <Setter Target="ProgressPanelControl.SubHeaderFontSize" Value="18" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    
</views:BaseMainPage>
