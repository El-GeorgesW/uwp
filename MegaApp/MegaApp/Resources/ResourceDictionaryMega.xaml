<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:MegaApp.Behaviors"
    xmlns:converters="using:MegaApp.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:selectors="using:MegaApp.Classes"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Converters">

    <!--  Resource dictionary entries should be defined here.  -->

    <!--  APP THEME OVERRIDES  -->

    <!--  Measurements  -->
    <GridLength x:Key="MegaPageHeaderLogoRowHeight">44</GridLength>
    <x:Double x:Key="InputHeight">40</x:Double>
    <GridLength x:Key="PageHeaderRowHeight">48</GridLength>

    <!--  Margins  -->
    <Thickness x:Key="StackedInputMargin">0,0,0,8</Thickness>
    <Thickness x:Key="MegaPageHeaderLogoMargin">10,0,0,0</Thickness>
    <Thickness x:Key="RootGridMargin">0,0,12,0</Thickness>

    <!--  Vector Data  -->
    <x:String x:Key="MegaIconVector">F1 M 18.092,16.246 C 18.092,16.450 17.927,16.615 17.725,16.615 L 16.168,16.615 C 15.966,16.615 15.802,16.450 15.802,16.246 L 15.802,11.419 C 15.802,11.378 15.752,11.357 15.723,11.387 L 12.427,14.709 C 12.140,14.997 11.676,14.997 11.390,14.709 L 8.094,11.387 C 8.065,11.357 8.015,11.378 8.015,11.419 L 8.015,16.246 C 8.015,16.450 7.851,16.615 7.649,16.615 L 6.092,16.615 C 5.889,16.615 5.725,16.450 5.725,16.246 L 5.725,7.754 C 5.725,7.550 5.889,7.385 6.092,7.385 L 7.162,7.385 C 7.356,7.385 7.543,7.462 7.680,7.601 L 11.779,11.731 C 11.850,11.803 11.966,11.803 12.038,11.731 L 16.136,7.601 C 16.274,7.462 16.460,7.385 16.655,7.385 L 17.725,7.385 C 17.927,7.385 18.092,7.550 18.092,7.754 L 18.092,16.246 Z M 12.000,0.000 C 5.373,0.000 0.000,5.373 0.000,12.000 C 0.000,18.627 5.373,24.000 12.000,24.000 C 18.627,24.000 24.000,18.627 24.000,12.000 C 24.000,5.373 18.627,0.000 12.000,0.000 Z</x:String>

    <!--  CONVERTERS  -->
    <converters:FolderContentViewStateToVisibilityConverter x:Key="FolderContentViewStateToVisibilityConverter" />
    <converters:NodeDisplayModeToColorBrushConverter x:Key="NodeDisplayModeToColorBrushConverter" />
    <converters:TextToLowerCaseConverter x:Key="TextToLowerCaseConverter" />
    <converters:TransferStatusToReadableTextConverter x:Key="TransferStatusToReadableTextConverter" />
    <converters:ViewStateToVisibilityConverter x:Key="ViewStateToVisibilityConverter" />
    <toolkit:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <toolkit:BoolToObjectConverter
        x:Key="InverseBoolToVisibilityConverter"
        FalseValue="Visible"
        TrueValue="Collapsed" />
    <toolkit:StringVisibilityConverter x:Key="StringVisibilityConverter" />

    <!--  SELECTORS  -->
    <selectors:NodeTemplateSelector
        x:Key="NodeTemplateSelector"
        FileItemTemplate="{StaticResource MegaNodeListViewFileItemContent}"
        FolderItemTemplate="{StaticResource MegaNodeListViewFolderItemContent}" />

    <!--  TEMPLATES  -->
    <DataTemplate x:Key="MegaPageHeaderLogo">
        <Border
            Width="44"
            Height="44"
            Background="{StaticResource MegaAppBackgroundBrush}">
            <Path
                Width="24"
                Height="24"
                Data="{StaticResource MegaIconVector}"
                Fill="{StaticResource MegaHeaderIconColorBrush}"
                FlowDirection="LeftToRight"
                Stretch="UniformToFill"
                StrokeThickness="0" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="CameraUploadsGroupHeader">
        <Grid Margin="0,20,0,18">
            <TextBlock
                FontFamily="Segoe UI"
                FontSize="16"
                FontWeight="Normal"
                Foreground="{StaticResource MegaRedColorBrush}"
                Text="{Binding DateAsString}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CameraUploadsGroupItem">
        <Grid Margin="0,12">
            <TextBlock
                FontFamily="Segoe UI"
                FontSize="20"
                FontWeight="Normal"
                Foreground="{StaticResource MegaRedColorBrush}"
                Text="{Binding Group.DateAsString}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MegaPivoHeaderTemplate">
        <Grid>
            <TextBlock
                FontFamily="Segoe UI"
                FontSize="24"
                FontWeight="Normal"
                Text="{Binding}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BreadcrumbHomeMegaTemplate">
        <Grid>
            <Path
                x:Name="BreadcrumbHomeMegaIcon"
                Width="14"
                Height="14"
                Data="{Binding BreadcrumbHomeMegaIcon}"
                Stretch="UniformToFill">
                <Path.Fill>
                    <SolidColorBrush Color="{ThemeResource MegaAppForeground}" />
                </Path.Fill>
            </Path>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BreadcrumbHomeRubbishBinTemplate">
        <Grid>
            <Path
                x:Name="BreadcrumbHomeRubbishBinIcon"
                Width="14"
                Height="14"
                Data="{Binding BreadcrumbHomeRubbishBinIcon}"
                Stretch="UniformToFill">
                <Path.Fill>
                    <SolidColorBrush Color="{ThemeResource MegaAppForeground}" />
                </Path.Fill>
            </Path>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BreadcrumbItemTemplate">
        <Grid>
            <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text="{Binding Name}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MegaNodeListViewFileItemContent">
        <Border
            Margin="-12,1"
            Background="{Binding DisplayMode, ConverterParameter=0\,4, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderBrush="{Binding DisplayMode, ConverterParameter=1\,0, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderThickness="2,2,2,2">
            <Grid Margin="12,4" Background="Transparent">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyout.Items>
                            <MenuFlyoutItem
                                Command="{Binding PreviewCommand}"
                                Text="{Binding PreviewText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='preview', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding DownloadCommand}"
                                Text="{Binding DownloadText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='download', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding GetLinkCommand}"
                                Text="{Binding GetLinkText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='getlink', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RenameCommand}"
                                Text="{Binding RenameText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='rename', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding CopyOrMoveCommand}"
                                Text="{Binding CopyOrMoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='copyormove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding MoveToRubbishBinCommand}"
                                Text="{Binding MoveToRubbishBinText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='movetorubbish', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RemoveCommand}"
                                Text="{Binding RemoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='remove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <behaviors:OpenFlyoutAction IsEnabled="True" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0">
                    <Path
                        Width="36"
                        Height="36"
                        Margin="0,0,12,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Canvas.ZIndex="0"
                        Data="{Binding DefaultImagePathData}"
                        Stretch="Uniform"
                        Visibility="{Binding IsDefaultImage, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Path.Fill>
                            <SolidColorBrush Color="{ThemeResource MegaAppForeground}" />
                        </Path.Fill>
                    </Path>
                    <Image
                        Width="36"
                        Height="36"
                        Margin="0,0,12,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Canvas.ZIndex="1"
                        Stretch="UniformToFill"
                        Visibility="{Binding IsDefaultImage, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <Image.Source>
                            <BitmapImage
                                DecodePixelHeight="36"
                                DecodePixelType="Logical"
                                UriSource="{Binding ThumbnailImageUri}" />
                        </Image.Source>
                    </Image>
                </Grid>

                <TextBlock
                    x:Name="txtFileName"
                    Grid.Row="0"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Text="{Binding Name}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
                <TextBlock
                    x:Name="txtSize"
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding Information}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    x:Name="txtCreated"
                    Grid.Row="1"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding ModificationTime}"
                    TextWrapping="NoWrap" />
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="MegaNodeGridViewFileItemContent">
        <Border
            Background="{Binding DisplayMode, ConverterParameter=0\,4, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderBrush="{Binding DisplayMode, ConverterParameter=1\,0, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderThickness="1">
            <Grid Width="96" Background="Transparent">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyout.Items>
                            <MenuFlyoutItem
                                Command="{Binding PreviewCommand}"
                                Text="{Binding PreviewText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='preview', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding DownloadCommand}"
                                Text="{Binding DownloadText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='download', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding GetLinkCommand}"
                                Text="{Binding GetLinkText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='getlink', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RenameCommand}"
                                Text="{Binding RenameText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='rename', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding CopyOrMoveCommand}"
                                Text="{Binding CopyOrMoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='copyormove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding MoveToRubbishBinCommand}"
                                Text="{Binding MoveToRubbishBinText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='movetorubbish', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RemoveCommand}"
                                Text="{Binding RemoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='remove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <behaviors:OpenFlyoutAction IsEnabled="True" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Grid.RowDefinitions>
                    <RowDefinition Height="96" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Path
                    Grid.Row="0"
                    Width="64"
                    Height="64"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{Binding DefaultImagePathData}"
                    Stretch="Uniform"
                    Visibility="{Binding IsDefaultImage, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Path.Fill>
                        <SolidColorBrush Color="{StaticResource MegaAppForeground}" />
                    </Path.Fill>
                </Path>
                <Image
                    Grid.Row="0"
                    Width="96"
                    Height="96"
                    Stretch="UniformToFill"
                    Visibility="{Binding IsDefaultImage, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <Image.Source>
                        <BitmapImage
                            DecodePixelHeight="96"
                            DecodePixelType="Logical"
                            UriSource="{Binding ThumbnailImageUri}" />
                    </Image.Source>
                </Image>
                <TextBlock
                    Grid.Row="1"
                    Margin="0,4,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Text="{Binding Name}"
                    TextAlignment="Center"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="CameraUploadsListViewFileItemContent">
        <Border
            Margin="-12,1"
            Background="{Binding DisplayMode, ConverterParameter=0\,4, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderBrush="{Binding DisplayMode, ConverterParameter=1\,0, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderThickness="2,2,2,2">
            <Grid Margin="12,4" Background="Transparent">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyout.Items>
                            <MenuFlyoutItem
                                Command="{Binding PreviewCommand}"
                                Text="{Binding PreviewText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='preview', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding DownloadCommand}"
                                Text="{Binding DownloadText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='download', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding GetLinkCommand}"
                                Text="{Binding GetLinkText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='getlink', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RenameCommand}"
                                Text="{Binding RenameText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='rename', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding CopyOrMoveCommand}"
                                Text="{Binding CopyOrMoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='copyormove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding MoveToRubbishBinCommand}"
                                Text="{Binding MoveToRubbishBinText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='movetorubbish', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RemoveCommand}"
                                Text="{Binding RemoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='remove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <behaviors:OpenFlyoutAction IsEnabled="True" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Path
                        Width="36"
                        Height="36"
                        Margin="0,0,12,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Canvas.ZIndex="0"
                        Data="{Binding DefaultImagePathData}"
                        Stretch="Uniform"
                        Visibility="{Binding IsDefaultImage, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Path.Fill>
                            <SolidColorBrush Color="{ThemeResource MegaAppForeground}" />
                        </Path.Fill>
                    </Path>
                    <Image
                        Width="36"
                        Height="36"
                        Margin="0,0,12,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Canvas.ZIndex="1"
                        Stretch="UniformToFill"
                        Visibility="{Binding IsDefaultImage, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <Image.Source>
                            <BitmapImage
                                DecodePixelHeight="36"
                                DecodePixelType="Logical"
                                UriSource="{Binding ThumbnailImageUri}" />
                        </Image.Source>
                    </Image>
                </Grid>

                <TextBlock
                    x:Name="txtFileName"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Text="{Binding Name}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
                <TextBlock
                    x:Name="txtSize"
                    Grid.Column="2"
                    Margin="10,0,10,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding Information}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    x:Name="txtType"
                    Grid.Column="3"
                    Margin="10,0,10,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding ImageType}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    x:Name="txtCreated"
                    Grid.Column="4"
                    Margin="10,0,10,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding ModificationTime}"
                    TextWrapping="NoWrap" />
            </Grid>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="CameraUploadsGridViewFileItemContent">
        <Border
            Background="{Binding DisplayMode, ConverterParameter=0\,4, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderBrush="{Binding DisplayMode, ConverterParameter=1\,0, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderThickness="1">
            <Grid Width="130" Background="Transparent">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyout.Items>
                            <MenuFlyoutItem
                                Command="{Binding PreviewCommand}"
                                Text="{Binding PreviewText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='preview', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding DownloadCommand}"
                                Text="{Binding DownloadText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='download', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding GetLinkCommand}"
                                Text="{Binding GetLinkText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='getlink', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RenameCommand}"
                                Text="{Binding RenameText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='rename', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding CopyOrMoveCommand}"
                                Text="{Binding CopyOrMoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='copyormove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding MoveToRubbishBinCommand}"
                                Text="{Binding MoveToRubbishBinText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='movetorubbish', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RemoveCommand}"
                                Text="{Binding RemoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='remove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <behaviors:OpenFlyoutAction IsEnabled="True" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Path
                    Width="96"
                    Height="96"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{Binding DefaultImagePathData}"
                    Stretch="Uniform"
                    Visibility="{Binding IsDefaultImage, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Path.Fill>
                        <SolidColorBrush Color="{StaticResource MegaAppForeground}" />
                    </Path.Fill>
                </Path>
                <Image
                    Width="130"
                    Height="130"
                    Stretch="UniformToFill"
                    Visibility="{Binding IsDefaultImage, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <Image.Source>
                        <BitmapImage
                            DecodePixelHeight="96"
                            DecodePixelType="Logical"
                            UriSource="{Binding ThumbnailImageUri}" />
                    </Image.Source>
                </Image>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="MegaNodeListViewFolderItemContent">
        <Border
            Margin="-12,1"
            Background="{Binding DisplayMode, ConverterParameter=0\,4, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderBrush="{Binding DisplayMode, ConverterParameter=1\,0, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderThickness="2,2,2,2">
            <Grid Margin="12,4" Background="Transparent">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyout.Items>
                            <MenuFlyoutItem
                                Command="{Binding DownloadCommand}"
                                Text="{Binding DownloadText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='download', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding GetLinkCommand}"
                                Text="{Binding GetLinkText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='getlink', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RenameCommand}"
                                Text="{Binding RenameText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='rename', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding CopyOrMoveCommand}"
                                Text="{Binding CopyOrMoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='copyormove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding MoveToRubbishBinCommand}"
                                Text="{Binding MoveToRubbishBinText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='movetorubbish', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RemoveCommand}"
                                Text="{Binding RemoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='remove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <behaviors:OpenFlyoutAction IsEnabled="True" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0">
                    <Path
                        Width="36"
                        Height="36"
                        Margin="0,0,12,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Canvas.ZIndex="0"
                        Data="{Binding DefaultImagePathData}"
                        Stretch="Uniform">
                        <Path.Fill>
                            <SolidColorBrush Color="{ThemeResource MegaAppForeground}" />
                        </Path.Fill>
                    </Path>
                </Grid>

                <TextBlock
                    x:Name="txtFolderName"
                    Grid.Row="0"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Text="{Binding Name}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
                <TextBlock
                    x:Name="txtCount"
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding Information}"
                    TextWrapping="NoWrap" />
                <TextBlock
                    x:Name="txtCreated"
                    Grid.Row="1"
                    Grid.Column="2"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Style="{ThemeResource CaptionTextBlockStyle}"
                    Text="{Binding CreationTime}"
                    TextWrapping="NoWrap" />
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="MegaNodeGridViewFolderItemContent">
        <Border
            Background="{Binding DisplayMode, ConverterParameter=0\,4, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderBrush="{Binding DisplayMode, ConverterParameter=1\,0, Converter={StaticResource NodeDisplayModeToColorBrushConverter}}"
            BorderThickness="1">
            <Grid Width="96" Background="Transparent">
                <FlyoutBase.AttachedFlyout>
                    <MenuFlyout>
                        <MenuFlyout.Items>
                            <MenuFlyoutItem
                                Command="{Binding DownloadCommand}"
                                Text="{Binding DownloadText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='download', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding GetLinkCommand}"
                                Text="{Binding GetLinkText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='getlink', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RenameCommand}"
                                Text="{Binding RenameText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='rename', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding CopyOrMoveCommand}"
                                Text="{Binding CopyOrMoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='copyormove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding MoveToRubbishBinCommand}"
                                Text="{Binding MoveToRubbishBinText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='movetorubbish', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                Command="{Binding RemoveCommand}"
                                Text="{Binding RemoveText}"
                                Visibility="{Binding NodeBinding, ConverterParameter='remove', Converter={StaticResource ViewStateToVisibilityConverter}}" />
                        </MenuFlyout.Items>
                    </MenuFlyout>
                </FlyoutBase.AttachedFlyout>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="RightTapped">
                        <behaviors:OpenFlyoutAction IsEnabled="True" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Grid.RowDefinitions>
                    <RowDefinition Height="96" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Path
                    Width="64"
                    Height="64"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{Binding DefaultImagePathData}"
                    Stretch="Uniform">
                    <Path.Fill>
                        <SolidColorBrush Color="{StaticResource MegaAppForeground}" />
                    </Path.Fill>
                </Path>
                <TextBlock
                    Grid.Row="1"
                    Margin="0,4,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Text="{Binding Name}"
                    TextAlignment="Center"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </Grid>
        </Border>
    </DataTemplate>

    <Style x:Key="MegaCleanListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="IsHoldingEnabled" Value="True" />
        <Setter Property="Padding" Value="12,0,12,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ContentPresenter />
                    <!--<ListViewItemPresenter CheckBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Inline" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" FocusBorderBrush="{ThemeResource SystemControlForegroundAltHighBrush}" FocusSecondaryBorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" PressedBackground="{ThemeResource SystemControlHighlightListMediumBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="{ThemeResource SystemControlHighlightListLowBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectedPressedBackground="{ThemeResource SystemControlHighlightListAccentHighBrush}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" SelectedPointerOverBackground="{ThemeResource SystemControlHighlightListAccentMediumBrush}" SelectedBackground="{ThemeResource SystemControlHighlightListAccentLowBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="MegaTransferItemContent">
        <Grid Margin="0,8" Background="Transparent">
            <FlyoutBase.AttachedFlyout>
                <MenuFlyout>
                    <MenuFlyout.Items>
                        <MenuFlyoutItem Command="{Binding CancelTransferCommand}" Text="{Binding CancelText}" />
                    </MenuFlyout.Items>
                </MenuFlyout>
            </FlyoutBase.AttachedFlyout>
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="RightTapped">
                    <behaviors:OpenFlyoutAction IsEnabled="{Binding IsActionAvailable}" />
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Path
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                Width="64"
                Height="64"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{Binding FileTypePathData}"
                Stretch="Uniform"
                Visibility="{Binding IsDefaultImage, Converter={StaticResource BoolToVisibilityConverter}}">
                <Path.Fill>
                    <SolidColorBrush Color="{StaticResource MegaAppForeground}" />
                </Path.Fill>
            </Path>
            <Image
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                Width="64"
                Height="64"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Stretch="UniformToFill"
                Visibility="{Binding IsDefaultImage, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <Image.Source>
                    <BitmapImage
                        DecodePixelHeight="64"
                        DecodePixelType="Logical"
                        DecodePixelWidth="64"
                        UriSource="{Binding ThumbnailUri}" />
                </Image.Source>
            </Image>
            <Border
                Grid.RowSpan="3"
                Width="64"
                Height="64"
                Margin="0,0,8,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                BorderThickness="2"
                Canvas.ZIndex="1"
                Visibility="{Binding IsDefaultImage, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <Border.BorderBrush>
                    <SolidColorBrush Color="{StaticResource MegaAppForeground}" />
                </Border.BorderBrush>
            </Border>
            <TextBlock
                Grid.Row="0"
                Grid.Column="1"
                Margin="0,0,0,-6"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Style="{ThemeResource BaseTextBlockStyle}"
                Text="{Binding DisplayName}"
                TextTrimming="WordEllipsis" />
            <ProgressBar
                Grid.Row="1"
                Grid.Column="1"
                Margin="0,0,0,0"
                VerticalAlignment="Center"
                IsIndeterminate="False"
                Maximum="{Binding TotalBytes}"
                Minimum="0"
                Value="{Binding TransferedBytes}">
                <ProgressBar.Foreground>
                    <SolidColorBrush Color="{StaticResource MegaRedColor}" />
                </ProgressBar.Foreground>
                <ProgressBar.Background>
                    <SolidColorBrush Opacity="0.3" Color="White" />
                </ProgressBar.Background>
            </ProgressBar>
            <TextBlock
                Grid.Row="2"
                Grid.Column="1"
                Margin="0,-6,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Foreground="{StaticResource MegaAppForegroundBrush}"
                Style="{ThemeResource CaptionTextBlockStyle}"
                Text="{Binding Status, Converter={StaticResource TransferStatusToReadableTextConverter}}"
                TextWrapping="Wrap" />
            <TextBlock
                Grid.Row="2"
                Grid.Column="1"
                Margin="0,-6,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Foreground="{StaticResource MegaAppForegroundBrush}"
                Style="{ThemeResource CaptionTextBlockStyle}"
                Text="{Binding TransferSpeed}"
                TextWrapping="Wrap" />
        </Grid>
    </DataTemplate>


</ResourceDictionary>















