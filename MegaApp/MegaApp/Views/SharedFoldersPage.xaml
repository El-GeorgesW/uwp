<views:BaseSharedFoldersPage
    x:Class="MegaApp.Views.SharedFoldersPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:MegaApp.Behaviors"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:MegaApp.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:MegaApp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:userControls="using:MegaApp.UserControls"
    xmlns:views="using:MegaApp.Views"
    xmlns:viewModels="using:MegaApp.ViewModels"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance viewModels:SharedFoldersViewModel}">

    <SplitView
        x:Name="SharedFolderSplitView"
        DisplayMode="Inline"
        IsPaneOpen="{Binding ActiveView.IsPanelOpen}"
        PanePlacement="Right">
        <SplitView.Pane>
            <Grid>
                <userControls:SharedFolderContentPanel
                    x:Name="ContentPanelControl"
                    DataContext="{Binding ActiveView}"
                    Background="{StaticResource MegaAppBackgroundBrush}"
                    Foreground="{StaticResource MegaAppForegroundBrush}"
                    SharedFolderNode="{Binding ItemCollection.FocusedItem}"
                    Visibility="{Binding VisiblePanel, ConverterParameter='Content', Converter={StaticResource PanelTypeToVisibilityConverter}}" />
                
                <userControls:NodeInformationPanel
                    x:Name="InformationPanelControl"
                    DataContext="{Binding ActiveView}"
                    Background="{StaticResource MegaAppBackgroundBrush}"
                    Foreground="{StaticResource MegaAppForegroundBrush}"
                    Node="{Binding ItemCollection.FocusedItem}"
                    Visibility="{Binding VisiblePanel, ConverterParameter='Information', Converter={StaticResource PanelTypeToVisibilityConverter}}" />

                <userControls:CopyMoveImportPanel
                    x:Name="CopyOrMovePanelControl"
                    DataContext="{Binding ActiveView}"
                    Background="{StaticResource MegaAppBackgroundBrush}"
                    Foreground="{StaticResource MegaAppForegroundBrush}"
                    Visibility="{Binding VisiblePanel, ConverterParameter='CopyMoveImport', Converter={StaticResource PanelTypeToVisibilityConverter}}" />
            </Grid>
        </SplitView.Pane>

        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="{StaticResource PageHeaderRowHeight}" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid 
                x:Name="TopRowGrid"
                DataContext="{Binding ActiveView}"
                Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <TextBlock
                    x:Name="SectionNameText"
                    Grid.Row="0" Grid.Column="0"
                    Margin="24,14,0,0"
                    FontSize="12"
                    Foreground="{StaticResource MegaRedColorBrush}"
                    Text="{Binding SharedFoldersText, Mode=OneTime}" />

                <!--  TOP COMMAND BAR AREA (ONLY DESKTOP)  -->
                <Grid 
                    Grid.Row="0" Grid.Column="1"
                    Visibility="{Binding IsPanelOpen, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <Grid x:Name="TopCommandBar">
                        
                        <!--  TOP COMMAND BAR (ONLY DESKTOP)  -->
                        <CommandBar 
                            Background="Transparent"
                            extensions:CommandBarExtensions.HideMoreButton="{Binding ItemCollection.OnlyOneSelectedItem, Converter={StaticResource InverseBoolConverter}}">
                            <AppBarButton
                                Command="{Binding DownloadCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding DownloadText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding DownloadText, Mode=OneTime}"
                                Visibility="{Binding SharedFolders, ConverterParameter='download', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding DownloadPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                Command="{Binding CopyOrMoveCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding CopyOrMoveText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding CopyOrMoveText, Mode=OneTime}"
                                Visibility="{Binding SharedFolders, ConverterParameter='copyormove', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding CopyOrMovePathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                Command="{Binding LeaveShareCommand}"
                                IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                Label="{Binding LeaveShareText, Mode=OneTime}"
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                ToolTipService.ToolTip="{Binding LeaveShareText, Mode=OneTime}"
                                Visibility="{Binding SharedFolders, ConverterParameter='leaveshare', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding LeaveSharePathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <AppBarButton
                                Style="{StaticResource MegaAppBarButtonStyle}"
                                Label="{Binding MultiSelectText, Mode=OneTime}"                        
                                ToolTipService.ToolTip="{Binding MultiSelectText, Mode=OneTime}"
                                Command="{Binding ItemCollection.MultiSelectCommand}"
                                Visibility="{Binding ItemCollection.IsMultiSelectActive, Converter={StaticResource BoolToVisibilityConverter}}">
                                <AppBarButton.Icon>
                                    <PathIcon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="{Binding MultiSelectPathData, Mode=OneTime}" />
                                </AppBarButton.Icon>
                            </AppBarButton>
                            <CommandBar.SecondaryCommands>
                                <AppBarButton
                                    Label="{Binding OpenText, Mode=OneTime}"
                                    ToolTipService.ToolTip="{Binding OpenText, Mode=OneTime}"
                                    Command="{Binding OpenContentPanelCommand}"
                                    Visibility="{Binding SharedFolders, ConverterParameter='open', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                    <!--<AppBarButton.Icon>
                                        <PathIcon
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding InformationPathData, Mode=OneTime}" />
                                    </AppBarButton.Icon>-->
                                </AppBarButton>
                                <AppBarButton
                                    Label="{Binding InformationText, Mode=OneTime}"
                                    ToolTipService.ToolTip="{Binding InformationText, Mode=OneTime}"
                                    Command="{Binding OpenInformationPanelCommand}"
                                    Visibility="{Binding SharedFolders, ConverterParameter='information', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                    <AppBarButton.Icon>
                                        <PathIcon
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding InformationPathData, Mode=OneTime}" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton
                                    IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                    Label="{Binding GetLinkText, Mode=OneWay}"
                                    ToolTipService.ToolTip="{Binding GetLinkText, Mode=OneTime}"
                                    Command="{Binding GetLinkCommand}"
                                    Visibility="{Binding SharedFolders, ConverterParameter='getlink', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                    <AppBarButton.Icon>
                                        <PathIcon
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding LinkPathData, Mode=OneTime}" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton
                                    IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                    Label="{Binding RemoveLinkText, Mode=OneTime}"
                                    ToolTipService.ToolTip="{Binding RemoveLinkText, Mode=OneTime}"
                                    Command="{Binding RemoveLinkCommand}"
                                    Visibility="{Binding SharedFolders, ConverterParameter='removelink', Converter={StaticResource FolderViewStateToVisibilityConverter}}" />
                                <AppBarButton
                                    IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                    Label="{Binding ManageCollaboratorsText, Mode=OneTime}"
                                    ToolTipService.ToolTip="{Binding ManageCollaboratorsText, Mode=OneTime}"
                                    Command="{Binding ShareCommand}"
                                    Visibility="{Binding SharedFolders, ConverterParameter='share', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                    <AppBarButton.Icon>
                                        <PathIcon
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding ManageSharePathData, Mode=OneTime}" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton
                                    IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                    Label="{Binding RenameText, Mode=OneTime}"
                                    ToolTipService.ToolTip="{Binding RenameText, Mode=OneTime}"
                                    Command="{Binding RenameCommand}"
                                    Visibility="{Binding SharedFolders, ConverterParameter='remove', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                    <AppBarButton.Icon>
                                        <PathIcon
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding RenamePathData, Mode=OneTime}" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton
                                    Command="{Binding RemoveSharedAccessCommand}"
                                    IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                                    Label="{Binding RemoveSharedAccessText, Mode=OneTime}"
                                    ToolTipService.ToolTip="{Binding RemoveSharedAccessText, Mode=OneTime}"
                                    Visibility="{Binding SharedFolders, ConverterParameter='removeshare', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                                    <Viewbox MaxHeight="16" MaxWidth="16">
                                        <FontIcon Glyph="&#xE8F8;" />
                                    </Viewbox>
                                </AppBarButton>
                            </CommandBar.SecondaryCommands>
                        </CommandBar>
                    </Grid>
                </Grid>

                <!--  CLOSE PANEL TOP COMMAND BAR (ONLY DESKTOP)  -->
                <CommandBar 
                    Grid.Row="0" Grid.Column="2"
                    Background="Transparent"
                    extensions:CommandBarExtensions.HideMoreButton="True"
                    Visibility="{Binding IsPanelOpen, Converter={StaticResource BoolToVisibilityConverter}}">
                    <AppBarButton
                        Command="{Binding ClosePanelCommand}"
                        Label="{Binding ClosePanelText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding ClosePanelText, Mode=OneTime}">
                        <Viewbox MaxHeight="16" MaxWidth="16">
                            <FontIcon Glyph="&#xEA5B;"/>
                        </Viewbox>
                    </AppBarButton>
                </CommandBar>

                <!--  PERMANENT TOP COMMAND BAR (ALL DEVICES)  -->
                <CommandBar
                    Grid.Row="0" Grid.Column="2"
                    extensions:CommandBarExtensions.HideMoreButton="True"
                    Background="Transparent"
                    IsEnabled="{Binding ItemCollection.Items, Converter={StaticResource CollectionToBoolConverter}, Mode=OneWay}"
                    Visibility="{Binding IsPanelOpen, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <AppBarSeparator 
                        x:Name="PermanentTopCommandBarSeparator"
                        Margin="-12,0"
                        VerticalAlignment="Center"/>
                    <AppBarButton
                        x:Name="BtnSort"
                        Click="OnSortClick"
                        Label="{Binding SortByText}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding SortByText}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding SortByPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar>
            </Grid>

            <ContentPresenter Grid.Row="1" ContentTemplate="{StaticResource OfflineBannerSpace}" />

            <Grid x:Name="MainGrid" Grid.Row="2" Margin="12,0">
                <Pivot
                    x:Name="SharedFoldersPivot"
                    HeaderTemplate="{StaticResource MegaPivoHeaderTemplate}"
                    SelectionChanged="OnPivotSelectionChanged">
                    <PivotItem
                        x:Name="IncomingSharesPivot"
                        CacheMode="{x:Null}"
                        Header="{Binding IncomingSharesTitle, Mode=OneTime}">
                        <Grid DataContext="{Binding IncomingShares}">
                            <Grid Visibility="{Binding ItemCollection.Items, Converter={StaticResource CollectionVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                                    <ContentControl Template="{StaticResource SelectAllCheckBoxWithOrderTypeAndNumberOfItems}"/>
                                    <ContentControl Template="{StaticResource OrderTypeAndNumberOfItems}"/>
                                </Grid>
                                <Grid Margin="0,-8,-12,0" Grid.Row="1">
                                    <ListView
                                        x:Name="ListViewIncomingShares"
                                        Margin="-12,0,0,0"
                                        Background="{StaticResource MegaAppBackgroundBrush}"
                                        DoubleTapped="OnItemDoubleTapped"
                                        IsMultiSelectCheckBoxEnabled="{Binding ItemCollection.IsMultiSelectActive}"
                                        ItemContainerStyle="{StaticResource StretchedListviewItemStyle}"
                                        ItemTemplate="{StaticResource MegaIncomingSharedItemListViewDesktop}"
                                        ItemsSource="{Binding ItemCollection.Items}"
                                        RightTapped="OnRightItemTapped"
                                        Tapped="OnItemTapped">
                                        <interactivity:Interaction.Behaviors>
                                            <behaviors:MultiSelect SelectedItems="{Binding ItemCollection.SelectedItems, Mode=TwoWay}" />
                                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                                <core:EventTriggerBehavior.Actions>
                                                    <core:InvokeCommandAction Command="{Binding ItemCollection.SelectionChangedCommand}" />
                                                </core:EventTriggerBehavior.Actions>
                                            </core:EventTriggerBehavior>
                                        </interactivity:Interaction.Behaviors>
                                    </ListView>                                    
                                </Grid>
                            </Grid>
                            <ContentControl Template="{StaticResource EmptyStateTemplate}" />
                        </Grid>
                    </PivotItem>                    
                    <PivotItem
                        x:Name="OutgoingSharesPivot"
                        CacheMode="{x:Null}"
                        Header="{Binding OutgoingSharesTitle}">
                        <Grid DataContext="{Binding OutgoingShares}">
                            <Grid Visibility="{Binding ItemCollection.Items, Converter={StaticResource CollectionVisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                                    <ContentControl Template="{StaticResource SelectAllCheckBoxWithOrderTypeAndNumberOfItems}"/>
                                    <ContentControl Template="{StaticResource OrderTypeAndNumberOfItems}"/>
                                </Grid>
                                <Grid Margin="0,-8,-12,0" Grid.Row="1">
                                    <ListView
                                        x:Name="ListViewOutgoingShares"
                                        Margin="-12,0,0,0"
                                        Background="{StaticResource MegaAppBackgroundBrush}"
                                        DoubleTapped="OnItemDoubleTapped"
                                        IsMultiSelectCheckBoxEnabled="{Binding ItemCollection.IsMultiSelectActive}"
                                        ItemContainerStyle="{StaticResource StretchedListviewItemStyle}"
                                        ItemTemplate="{StaticResource MegaOutgoingSharedItemListViewDesktop}"
                                        ItemsSource="{Binding ItemCollection.Items}"
                                        RightTapped="OnRightItemTapped"
                                        Tapped="OnItemTapped">
                                        <interactivity:Interaction.Behaviors>
                                            <behaviors:MultiSelect SelectedItems="{Binding ItemCollection.SelectedItems, Mode=TwoWay}" />
                                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                                <core:EventTriggerBehavior.Actions>
                                                    <core:InvokeCommandAction Command="{Binding ItemCollection.SelectionChangedCommand}" />
                                                </core:EventTriggerBehavior.Actions>
                                            </core:EventTriggerBehavior>
                                        </interactivity:Interaction.Behaviors>
                                    </ListView>
                                </Grid>
                            </Grid>
                            <ContentControl Template="{StaticResource EmptyStateTemplate}" />
                        </Grid>
                    </PivotItem>
                </Pivot>
            </Grid>

            <!--  BOTTOM COMMAND BAR AREA (MOBILE DEVICES)  -->
            <Grid 
                x:Name="BottomCommandBar" 
                DataContext="{Binding ActiveView}"
                Grid.Row="3">

                <!--  BOTTOM COMMAND BAR (MOBILE DEVICES)  -->
                <CommandBar
                    Style="{StaticResource MegaCommandBarStyle}">
                    <AppBarButton
                        Command="{Binding DownloadCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding DownloadText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding DownloadText, Mode=OneTime}"
                        Visibility="{Binding SharedFolders, ConverterParameter='download', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding DownloadPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Command="{Binding LeaveShareCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{Binding LeaveShareText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{Binding LeaveShareText, Mode=OneTime}"
                        Visibility="{Binding SharedFolders, ConverterParameter='leaveshare', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding LeaveSharePathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        Label="{Binding MultiSelectText, Mode=OneTime}"                        
                        ToolTipService.ToolTip="{Binding MultiSelectText, Mode=OneTime}"
                        Command="{Binding ItemCollection.MultiSelectCommand}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding MultiSelectPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <CommandBar.SecondaryCommands>
                        <AppBarButton
                            Label="{Binding OpenText, Mode=OneTime}"
                            ToolTipService.ToolTip="{Binding OpenText, Mode=OneTime}"
                            Command="{Binding OpenContentPanelCommand}"
                            Visibility="{Binding SharedFolders, ConverterParameter='open', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                            <!--<AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{Binding InformationPathData, Mode=OneTime}" />
                            </AppBarButton.Icon>-->
                        </AppBarButton>
                        <AppBarButton
                            Label="{Binding InformationText, Mode=OneTime}"
                            ToolTipService.ToolTip="{Binding InformationText, Mode=OneTime}"
                            Command="{Binding OpenInformationPanelCommand}"
                            Visibility="{Binding SharedFolders, ConverterParameter='information', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{Binding InformationPathData, Mode=OneTime}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                            Label="{Binding GetLinkText, Mode=OneTime}"
                            ToolTipService.ToolTip="{Binding GetLinkText, Mode=OneTime}"
                            Command="{Binding GetLinkCommand}"
                            Visibility="{Binding SharedFolders, ConverterParameter='getlink', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{Binding LinkPathData, Mode=OneTime}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                            Label="{Binding ManageCollaboratorsText, Mode=OneTime}"
                            ToolTipService.ToolTip="{Binding ManageCollaboratorsText, Mode=OneTime}"
                            Command="{Binding ShareCommand}"
                            Visibility="{Binding SharedFolders, ConverterParameter='share', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{Binding ManageSharePathData, Mode=OneTime}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                            Label="{Binding RenameText, Mode=OneTime}"
                            ToolTipService.ToolTip="{Binding RenameText, Mode=OneTime}"
                            Command="{Binding RenameCommand}"
                            Visibility="{Binding SharedFolders, ConverterParameter='remove', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{Binding RenamePathData, Mode=OneTime}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                            Command="{Binding RemoveSharedAccessCommand}"
                            Label="{Binding RemoveSharedAccessText, Mode=OneTime}"
                            ToolTipService.ToolTip="{Binding RemoveSharedAccessText, Mode=OneTime}"
                            Visibility="{Binding SharedFolders, ConverterParameter='removeshare', Converter={StaticResource FolderViewStateToVisibilityConverter}}">
                            <Viewbox MaxHeight="16" MaxWidth="16">
                                <FontIcon Glyph="&#xE8F8;" />
                            </Viewbox>
                        </AppBarButton>
                    </CommandBar.SecondaryCommands>
                </CommandBar>
            </Grid>
        </Grid>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListViewIncomingShares.SelectionMode" Value="Extended" />
                        <Setter Target="ListViewOutgoingShares.SelectionMode" Value="Extended" />
                        <Setter Target="TopCommandBar.Visibility" Value="Visible" />
                        <Setter Target="BottomCommandBar.Visibility" Value="Collapsed" />
                        <Setter Target="PermanentTopCommandBarSeparator.Visibility" Value="Visible" />
                        <Setter Target="TopRowGrid.Background" Value="Transparent" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListViewIncomingShares.SelectionMode" Value="Single" />
                        <Setter Target="ListViewOutgoingShares.SelectionMode" Value="Single" />
                        <Setter Target="TopCommandBar.Visibility" Value="Collapsed" />
                        <Setter Target="BottomCommandBar.Visibility" Value="Visible" />
                        <Setter Target="PermanentTopCommandBarSeparator.Visibility" Value="Collapsed" />
                        <Setter Target="TopRowGrid.Background" Value="{ThemeResource MegaAppBarBackgroundBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="64,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="0,0,0,0" />
                        <Setter Target="ListViewIncomingShares.ItemTemplate" Value="{StaticResource MegaIncomingSharedItemListViewMobile}" />                        
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </SplitView>
</views:BaseSharedFoldersPage>
