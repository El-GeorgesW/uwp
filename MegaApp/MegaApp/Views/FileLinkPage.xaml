<views:BaseFileLinkPage
    x:Class="MegaApp.Views.FileLinkPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MegaApp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:MegaApp.Extensions"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:userControls="using:MegaApp.UserControls"
    xmlns:viewModels="using:MegaApp.ViewModels"
    xmlns:views="using:MegaApp.Views"
    d:DataContext="{d:DesignInstance viewModels:FileLinkViewModel}"
    mc:Ignorable="d">

    <SplitView
        x:Name="FileLinkSplitView"
        DisplayMode="Inline"
        IsPaneOpen="{Binding IsPanelOpen}"
        PanePlacement="Right">
        <SplitView.Pane>
            <userControls:CopyMoveImportPanel
                x:Name="ImportPanelControl"
                DataContext="{x:Bind ViewModel}"
                Background="{StaticResource MegaAppBackgroundBrush}"
                Foreground="{StaticResource MegaAppForegroundBrush}"
                Visibility="{Binding VisiblePanel, ConverterParameter='CopyMoveImport', Converter={StaticResource PanelTypeToVisibilityConverter}}" />
        </SplitView.Pane>

        <Grid 
            DataContext="{x:Bind ViewModel}"
            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="{StaticResource PageHeaderRowHeight}" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid x:Name="TopRowGrid" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    x:Name="SectionNameText"
                    Grid.Column="0"
                    Margin="24,14,0,0"
                    FontSize="12"
                    Foreground="{StaticResource MegaRedColorBrush}"
                    Text="{x:Bind ViewModel.SectionNameText, Mode=OneWay}" />

                <Grid x:Name="TopCommandBar">

                    <!--  TOP COMMAND BAR (ONLY DESKTOP)  -->
                    <CommandBar
                        DataContext="{x:Bind ViewModel, Mode=OneWay}"
                        Background="Transparent"
                        extensions:CommandBarExtensions.HideMoreButton="True"
                        Visibility="{Binding IsPanelOpen, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <AppBarButton
                            Command="{x:Bind ViewModel.DownloadCommand}"
                            IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                            Label="{x:Bind ViewModel.DownloadText, Mode=OneTime}"
                            Style="{StaticResource MegaAppBarButtonStyle}"
                            ToolTipService.ToolTip="{x:Bind ViewModel.DownloadText, Mode=OneTime}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{x:Bind ViewModel.DownloadPathData, Mode=OneTime}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                        <AppBarButton
                            Command="{x:Bind ViewModel.ImportCommand}"
                            IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                            Label="{x:Bind ViewModel.ImportText, Mode=OneTime}"
                            Style="{StaticResource MegaAppBarButtonStyle}"
                            ToolTipService.ToolTip="{x:Bind ViewModel.ImportText, Mode=OneTime}">
                            <AppBarButton.Icon>
                                <PathIcon
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{x:Bind ViewModel.ImportPathData, Mode=OneTime}" />
                            </AppBarButton.Icon>
                        </AppBarButton>
                    </CommandBar>

                    <!--  CLOSE PANEL TOP COMMAND BAR (ONLY DESKTOP)  -->
                    <CommandBar 
                        DataContext="{x:Bind ViewModel, Mode=OneWay}"
                        Grid.Column="2"
                        Background="Transparent"
                        extensions:CommandBarExtensions.HideMoreButton="True"
                        Visibility="{Binding IsPanelOpen, Converter={StaticResource BoolToVisibilityConverter}}">
                        <AppBarButton
                            Command="{x:Bind ViewModel.ClosePanelCommand}"
                            Label="{x:Bind ViewModel.ClosePanelText, Mode=OneTime}"
                            Style="{StaticResource MegaAppBarButtonStyle}"
                            ToolTipService.ToolTip="{x:Bind ViewModel.ClosePanelText, Mode=OneTime}">
                            <Viewbox MaxHeight="16" MaxWidth="16">
                                <FontIcon Glyph="&#xEA5B;"/>
                            </Viewbox>
                        </AppBarButton>
                    </CommandBar>
                </Grid>
            </Grid>

            <ContentPresenter
                x:Name="OfflineBanner"
                Grid.Row="1"
                ContentTemplate="{StaticResource OfflineBanner}" />

            <Grid 
                x:Name="MainGrid"
                DataContext="{x:Bind ViewModel.Node}"
                Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid
                    Grid.Row="0"
                    Visibility="{Binding PreviewImageUri, Converter={StaticResource InverseStringVisibilityConverter}}">
                    <Viewbox StretchDirection="DownOnly">
                        <Path
                            MaxHeight="200" MaxWidth="200"
                            Data="{x:Bind ViewModel.Node.DefaultImagePathData, Mode=OneWay}"
                            Stretch="Uniform"
                            Visibility="{Binding ThumbnailImageUri, Converter={StaticResource InverseStringVisibilityConverter}}">
                            <Path.Fill>
                                <SolidColorBrush Color="{ThemeResource MegaAppForeground}" />
                            </Path.Fill>
                        </Path>
                    </Viewbox>
                    <Viewbox StretchDirection="DownOnly">
                        <Image
                        HorizontalAlignment="Center"
                        Stretch="Uniform"
                        VerticalAlignment="Center"
                        Visibility="{Binding ThumbnailImageUri, Converter={StaticResource StringVisibilityConverter}}">
                            <Image.Source>
                                <BitmapImage
                                DecodePixelType="Logical"
                                UriSource="{x:Bind ViewModel.Node.ThumbnailImageUri, Mode=OneWay}" />
                            </Image.Source>
                        </Image>
                    </Viewbox>
                </Grid>
                <Grid 
                    Grid.Row="0"
                    Visibility="{Binding PreviewImageUri, Converter={StaticResource StringVisibilityConverter}}">
                    <Viewbox StretchDirection="DownOnly">
                        <Image
                            x:Name="PreviewImage"
                            HorizontalAlignment="Center"
                            Stretch="Uniform"
                            VerticalAlignment="Center">
                            <Image.Source>
                                <BitmapImage UriSource="{x:Bind ViewModel.Node.PreviewImageUri, Mode=OneWay}" />
                            </Image.Source>
                        </Image>
                    </Viewbox>
                </Grid>

                <TextBlock
                    Grid.Row="1"
                    Margin="0,20"
                    FontSize="24"
                    FontWeight="SemiLight"
                    Text="{x:Bind ViewModel.Node.Name, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />

                <RelativePanel Grid.Row="2">
                    <TextBlock
                        x:Name="SizeLabelText"
                        Opacity="0.4"
                        Text="{x:Bind ViewModel.SizeLabelText, Mode=OneTime}" />
                    <TextBlock x:Name="SizeText" Text="{x:Bind ViewModel.Node.SizeText, Mode=OneWay}" />
                    <TextBlock
                        x:Name="TypeLabelText"
                        Opacity="0.4"
                        Text="{x:Bind ViewModel.TypeLabelText, Mode=OneWay}" />
                    <TextBlock x:Name="TypeText" Text="{x:Bind ViewModel.Node.TypeText, Mode=OneWay}" />
                    <TextBlock
                        x:Name="DateCreatedLabelText"
                        Opacity="0.4"
                        Text="{x:Bind ViewModel.DateCreatedLabelText, Mode=OneWay}" />
                    <TextBlock x:Name="DateCreated" Text="{x:Bind ViewModel.Node.CreationTime, Mode=OneWay}" />
                    <TextBlock
                        x:Name="DateModifiedLabelText"
                        Opacity="0.4"
                        Text="{x:Bind ViewModel.DateModifiedLabelText, Mode=OneWay}" />
                    <TextBlock x:Name="DateModified" Text="{x:Bind ViewModel.Node.ModificationTime, Mode=OneWay}" />
                </RelativePanel>
            </Grid>

            <!--  BOTTOM COMMAND BAR AREA (MOBILE DEVICES)  -->
            <Grid x:Name="BottomCommandBar" Grid.Row="3">
                <!--  BOTTOM COMMAND BAR (ONLY DESKTOP)  -->
                <CommandBar
                    DataContext="{x:Bind ViewModel, Mode=OneWay}"
                    Style="{StaticResource MegaCommandBarStyle}">
                    <AppBarButton
                        Command="{x:Bind ViewModel.DownloadCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{x:Bind ViewModel.DownloadText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{x:Bind ViewModel.DownloadText, Mode=OneTime}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{x:Bind ViewModel.DownloadPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton
                        Command="{x:Bind ViewModel.ImportCommand}"
                        IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                        Label="{x:Bind ViewModel.ImportText, Mode=OneTime}"
                        Style="{StaticResource MegaAppBarButtonStyle}"
                        ToolTipService.ToolTip="{x:Bind ViewModel.ImportText, Mode=OneTime}">
                        <AppBarButton.Icon>
                            <PathIcon
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{x:Bind ViewModel.ImportPathData, Mode=OneTime}" />
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar>
            </Grid>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TopCommandBar.Visibility" Value="Visible" />
                        <Setter Target="BottomCommandBar.Visibility" Value="Collapsed" />
                        <Setter Target="TopRowGrid.Background" Value="{ThemeResource MegaAppBackgroundBrush}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TopCommandBar.Visibility" Value="Collapsed" />
                        <Setter Target="BottomCommandBar.Visibility" Value="Visible" />
                        <Setter Target="TopRowGrid.Background" Value="{ThemeResource MegaAppBarBackgroundBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="64,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="12,12" />
                        <Setter Target="TypeLabelText.(RelativePanel.Below)" Value="SizeLabelText" />
                        <Setter Target="DateCreatedLabelText.(RelativePanel.Below)" Value="TypeLabelText" />
                        <Setter Target="DateModifiedLabelText.(RelativePanel.Below)" Value="DateCreatedLabelText" />
                        <Setter Target="SizeText.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="TypeText.(RelativePanel.Below)" Value="SizeText" />
                        <Setter Target="TypeText.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="DateCreated.(RelativePanel.Below)" Value="TypeText" />
                        <Setter Target="DateCreated.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="DateModified.(RelativePanel.Below)" Value="DateCreated" />
                        <Setter Target="DateModified.(RelativePanel.AlignRightWithPanel)" Value="True" />                        
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="360" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="64,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="12,12" />
                        <Setter Target="SizeText.(RelativePanel.Below)" Value="SizeLabelText" />
                        <Setter Target="TypeLabelText.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="TypeText.(RelativePanel.Below)" Value="TypeLabelText" />
                        <Setter Target="TypeText.(RelativePanel.AlignLeftWith)" Value="TypeLabelText" />
                        <Setter Target="DateCreatedLabelText.(RelativePanel.Below)" Value="SizeText" />
                        <Setter Target="DateCreatedLabelText.Margin" Value="0,36,0,0" />
                        <Setter Target="DateCreated.(RelativePanel.Below)" Value="DateCreatedLabelText" />
                        <Setter Target="DateModifiedLabelText.(RelativePanel.AlignBottomWith)" Value="DateCreatedLabelText" />
                        <Setter Target="DateModifiedLabelText.(RelativePanel.AlignLeftWith)" Value="TypeLabelText" />
                        <Setter Target="DateModified.(RelativePanel.Below)" Value="DateModifiedLabelText" />
                        <Setter Target="DateModified.(RelativePanel.AlignLeftWith)" Value="TypeLabelText" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="24,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="24,12" />
                        <Setter Target="SizeText.(RelativePanel.Below)" Value="SizeLabelText" />
                        <Setter Target="TypeLabelText.(RelativePanel.AlignHorizontalCenterWithPanel)" Value="True" />
                        <Setter Target="TypeText.(RelativePanel.Below)" Value="TypeLabelText" />
                        <Setter Target="TypeText.(RelativePanel.AlignLeftWith)" Value="TypeLabelText" />
                        <Setter Target="DateCreatedLabelText.(RelativePanel.Below)" Value="SizeText" />
                        <Setter Target="DateCreatedLabelText.Margin" Value="0,36,0,0" />
                        <Setter Target="DateCreated.(RelativePanel.Below)" Value="DateCreatedLabelText" />
                        <Setter Target="DateModifiedLabelText.(RelativePanel.AlignBottomWith)" Value="DateCreatedLabelText" />
                        <Setter Target="DateModifiedLabelText.(RelativePanel.AlignLeftWith)" Value="TypeLabelText" />
                        <Setter Target="DateModified.(RelativePanel.Below)" Value="DateModifiedLabelText" />
                        <Setter Target="DateModified.(RelativePanel.AlignLeftWith)" Value="TypeLabelText" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </SplitView>
</views:BaseFileLinkPage>
