<views:BaseSettingsPage
    x:Class="MegaApp.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:classes="using:MegaApp.Classes"
    xmlns:interfaces="using:MegaApp.Interfaces"
    xmlns:settings="using:MegaApp.ViewModels.Settings"
    xmlns:triggers="using:WindowsStateTriggers"    
    xmlns:viewModels="using:MegaApp.ViewModels"
    xmlns:views="using:MegaApp.Views"
    d:DataContext="{d:DesignInstance viewModels:SettingsViewModel}"
    mc:Ignorable="d">

    <Page.Resources>
        <CollectionViewSource
            x:Name="SettingsCollectionSource"
            IsSourceGrouped="true"
            ItemsPath="Items"
            Source="{Binding SettingSections}" />
        <DataTemplate x:Key="BooleanItemTemplate" x:DataType="interfaces:ISetting">
            <StackPanel>
                <TextBlock
                    Margin="0,0,0,16"
                    Style="{ThemeResource MegaTitleFontStyle}"
                    Text="{x:Bind Title, Mode=OneTime}" />
                <TextBlock
                    Margin="0,0,0,24"
                    Style="{ThemeResource MegaBodyFontStyle}"
                    Text="{x:Bind Description, Mode=OneTime}"
                    Visibility="{x:Bind Description, Converter={StaticResource StringVisibilityConverter}}" />
                <ToggleSwitch
                    IsOn="{Binding Value, Mode=TwoWay}"
                    OffContent="{Binding DataContext.OffText, ElementName=SettingsPage}"
                    OnContent="{Binding DataContext.OnText, ElementName=SettingsPage}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="DescriptionItemTemplate" x:DataType="interfaces:ISetting">
            <StackPanel Margin="0,0,0,28">
                <TextBlock
                    Margin="0,0,0,16"
                    Style="{ThemeResource MegaTitleFontStyle}"
                    Text="{x:Bind Title, Mode=OneTime}"
                    Visibility="{x:Bind Title, Converter={StaticResource StringVisibilityConverter}}" />
                <TextBlock
                    Style="{ThemeResource MegaBodyFontStyle}"
                    Text="{x:Bind Description, Mode=OneTime}"
                    Visibility="{x:Bind Description, Converter={StaticResource StringVisibilityConverter}}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="RecoveryKeyItemTemplate" x:DataType="settings:RecoveryKeySettingViewModel">
            <StackPanel>
                <TextBlock
                    Margin="0,0,0,16"
                    Style="{ThemeResource MegaTitleFontStyle}"
                    Text="{x:Bind Title, Mode=OneTime}" />
                <TextBlock
                    Margin="0,0,0,24"
                    Style="{ThemeResource MegaBodyFontStyle}"
                    Text="{x:Bind Description, Mode=OneTime}" />
                <Grid HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        Width="136"
                        Margin="0,0,4,0"
                        Command="{x:Bind CopyKeyCommand}"
                        Content="{x:Bind CopyKeyText, Mode=OneTime}"
                        IsEnabled="{x:Bind IsNetworkAvailable, Mode=OneWay}" />
                    <Button
                        Grid.Column="1"
                        Width="136"
                        Margin="4,0,0,0"
                        Command="{x:Bind SaveKeyCommand}"
                        Content="{x:Bind SaveKeyText, Mode=OneTime}"
                        IsEnabled="{x:Bind IsNetworkAvailable, Mode=OneWay}" />
                </Grid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="InformationItemTemplate" x:DataType="interfaces:ISetting">
            <StackPanel Margin="0,0,0,28">
                <TextBlock Style="{ThemeResource MegaTitleFontStyle}" Text="{x:Bind Title, Mode=OneTime}" />
                <TextBlock Style="{ThemeResource MegaBodyFontStyle}" Text="{x:Bind Value, Mode=OneTime}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="InfoActionItemTemplate" x:DataType="interfaces:ISetting">
            <StackPanel Margin="0,0,0,28">
                <TextBlock 
                    Style="{ThemeResource MegaTitleFontStyle}" 
                    Text="{x:Bind Title, Mode=OneTime}"
                    Tapped="OnSdkVersionTapped"/>
                <HyperlinkButton
                    Command="{x:Bind ActionCommand}"
                    Content="{x:Bind Value, Mode=OneTime}"
                    Foreground="{ThemeResource MegaAppForegroundBrush}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AcknowledgementsItemTemplate" x:DataType="settings:AcknowledgementsSettingViewModel">
            <StackPanel Margin="0,0,0,28">
                <TextBlock Style="{ThemeResource MegaTitleFontStyle}" Text="{x:Bind Title, Mode=OneTime}" />
                <ListView
                    Margin="0,-8,0,0"
                    ItemContainerStyle="{StaticResource MegaCleanListViewItemStyle}"
                    ItemsSource="{x:Bind Value}"
                    SelectionMode="None">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <HyperlinkButton
                                Content="{Binding Key, Mode=OneTime}"
                                Foreground="{ThemeResource MegaAppForegroundBrush}"
                                NavigateUri="{Binding Value}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </DataTemplate>
        <classes:SettingTemplateSelector
            x:Key="SettingTemplateSelector"
            AcknowledgementsItemTemplate="{StaticResource AcknowledgementsItemTemplate}"
            BooleanItemTemplate="{StaticResource BooleanItemTemplate}"
            DescriptionItemTemplate="{StaticResource DescriptionItemTemplate}"
            InfoActionItemTemplate="{StaticResource InfoActionItemTemplate}"
            InformationItemTemplate="{StaticResource InformationItemTemplate}"
            RecoveryKeyItemTemplate="{StaticResource RecoveryKeyItemTemplate}" />
    </Page.Resources>


    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="{StaticResource PageHeaderRowHeight}"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid x:Name="TopRowGrid" Grid.Row="0">
            <TextBlock
                x:Name="SectionNameText"
                Grid.Row="0" Grid.Column="0"
                Margin="24,14,0,0"
                FontSize="12"
                Foreground="{StaticResource MegaRedColorBrush}"
                Text="{x:Bind ViewModel.SectionNameText, Mode=OneWay}" />
        </Grid>

        <ContentPresenter
            x:Name="OfflineBanner"
            Canvas.ZIndex="1"
            Grid.Row="1"
            ContentTemplate="{StaticResource OfflineBanner}" />
        
        <Grid x:Name="MainGrid" Grid.Row="2">
            <ListView
                Padding="20"
                HorizontalAlignment="Stretch"
                ItemContainerStyle="{StaticResource MegaCleanListViewItemStyle}"
                ItemTemplateSelector="{StaticResource SettingTemplateSelector}"
                ItemsSource="{Binding Source={StaticResource SettingsCollectionSource}}"
                SelectionMode="None">
                <ListView.GroupStyle>
                    <GroupStyle HeaderContainerStyle="{StaticResource MegaGroupListViewHeaderItemStyle}">
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,0,0,16">
                                    <TextBlock Style="{ThemeResource MegaHeaderFontStyle}" Text="{Binding Header}" />
                                </StackPanel>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel
                            MaxWidth="{StaticResource ViewAreaMaxWidth}"
                            HorizontalAlignment="Left"
                            AreStickyGroupHeadersEnabled="True"
                            GroupPadding="0, 0, 0, 80"
                            Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TopRowGrid.Background" Value="{StaticResource MegaAppBarBackgroundBrush}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TopRowGrid.Background" Value="Transparent"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="64,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="-4,-8,0,0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SectionNameText.Margin" Value="24,14,0,0" />
                        <Setter Target="MainGrid.Margin" Value="4,-12,12,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</views:BaseSettingsPage>















