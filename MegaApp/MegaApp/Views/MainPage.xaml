<views:BaseMainPage
    x:Class="MegaApp.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControls="using:MegaApp.UserControls"
    xmlns:viewModels="using:MegaApp.ViewModels"
    xmlns:views="using:MegaApp.Views"
    d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:StringVisibilityConverter x:Key="StringVisibilityConverter" />
        <DataTemplate x:Key="MenuItemTemplate" x:DataType="viewModels:MenuItemViewModel">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Grid.Column="0"
                    HorizontalAlignment="Stretch"
                    AutomationProperties.AccessibilityView="Raw"
                    Content="{x:Bind Icon}"
                    ToolTipService.ToolTip="{x:Bind ToolTip}" />
                <Grid Grid.Column="0" Visibility="{x:Bind IsMyAccountMenuItem, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneTime}">
                    <Ellipse
                        Width="33"
                        Height="33"
                        HorizontalAlignment="Stretch"
                        AutomationProperties.AccessibilityView="Raw"
                        Stroke="{ThemeResource MegaAppForegroundBrush}"
                        ToolTipService.ToolTip="{x:Bind ToolTip}"
                        Visibility="{x:Bind UserData.AvatarUri, Converter={StaticResource InverseStringVisibilityConverter}, Mode=OneWay}">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{x:Bind UserData.AvatarColor, Mode=OneWay}" />
                        </Ellipse.Fill>
                    </Ellipse>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Foreground="White"
                        Text="{x:Bind UserData.AvatarLetter, Mode=OneWay}"
                        Visibility="{x:Bind UserData.AvatarUri, Converter={StaticResource InverseStringVisibilityConverter}, Mode=OneWay}" />
                    <Ellipse
                        Width="33"
                        Height="33"
                        HorizontalAlignment="Stretch"
                        AutomationProperties.AccessibilityView="Raw"
                        Stroke="{ThemeResource MegaAppForegroundBrush}"
                        ToolTipService.ToolTip="{x:Bind ToolTip}"
                        Visibility="{x:Bind UserData.AvatarUri, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="{Binding UserData.AvatarUri, Mode=OneWay}" />
                        </Ellipse.Fill>
                    </Ellipse>
                </Grid>
                <StackPanel
                    Grid.Column="1"
                    Margin="10,5,10,6"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <TextBlock
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{x:Bind Label, Mode=OneWay}" />
                    <TextBlock
                        VerticalAlignment="Center"
                        FontSize="12"
                        Opacity="0.6"
                        Text="{x:Bind SubLabel, Mode=OneWay}"
                        Visibility="{x:Bind SubLabel, Converter={StaticResource StringVisibilityConverter}, Mode=OneWay}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{StaticResource MegaHamburgerMenuBackgroundBrush}">
        <userControls:HamburgerMenuEx
            x:Name="HamburgerMenuControl"
            Foreground="{StaticResource MegaHamburgerMenuForegroundBrush}"
            ItemClick="OnHamburgerMenuControlItemClick"
            ItemTemplate="{StaticResource MenuItemTemplate}"
            ItemsSource="{Binding MenuItems}"
            OptionsItemClick="OnHamburgerMenuControlItemClick"
            OptionsItemTemplate="{StaticResource MenuItemTemplate}"
            OptionsItemsSource="{Binding OptionItems}"
            PaneBackground="{StaticResource MegaHamburgerMenuBackgroundBrush}"
            SelectedMenuItem="{Binding SelectedItem, Mode=TwoWay}"
            SelectedOptionItem="{Binding SelectedOptionItem, Mode=TwoWay}"
            VisualStateNarrowMinWidth="0"
            VisualStateNormalMinWidth="600"
            VisualStateWideMinWidth="1200">
            <userControls:FrameEx x:Name="ContentFrame" />
        </userControls:HamburgerMenuEx>

        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ProgressPanelControl.Padding" Value="16, 18, 0, 16" />
                        <Setter Target="ProgressPanelControl.ProgressAlignment" Value="Below" />
                        <Setter Target="ProgressPanelControl.VerticalContentAlignment" Value="Top" />
                        <Setter Target="ProgressPanelControl.HeaderFontSize" Value="24" />
                        <Setter Target="ProgressPanelControl.SubHeaderFontSize" Value="16" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ProgressPanelControl.Padding" Value="178, 18, 0, 16" />
                        <Setter Target="ProgressPanelControl.ProgressAlignment" Value="Right" />
                        <Setter Target="ProgressPanelControl.VerticalContentAlignment" Value="Center" />
                        <Setter Target="ProgressPanelControl.HeaderFontSize" Value="44" />
                        <Setter Target="ProgressPanelControl.SubHeaderFontSize" Value="18" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</views:BaseMainPage>
