<userControls:BaseFolderExplorer
    x:Class="MegaApp.UserControls.FolderExplorer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:MegaApp.Behaviors"
    xmlns:breadcrumb="using:GoedWare.Controls.Breadcrumb"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:MegaApp.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:triggers="using:WindowsStateTriggers"
    xmlns:userControls="using:MegaApp.UserControls"
    xmlns:userControlsViewModels="using:MegaApp.ViewModels.UserControls"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance userControlsViewModels:FolderExplorerViewModel}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid 
            Grid.Row="0"
            Visibility="{Binding Folder.Type, ConverterParameter=CameraUploads, Converter={StaticResource InverseContainerTypeToVisibilityConverter}}">
            <breadcrumb:BreadcrumbControl
                x:Name="BreadCrumb"
                DisplayMemberPath="Name"
                HomeCommand="{Binding Folder.HomeSelectedCommand}"
                HomeTemplate="{StaticResource BreadcrumbHomeTemplate}"
                ItemCommand="{Binding Folder.ItemSelectedCommand}"
                ItemTemplate="{StaticResource BreadcrumbItemTemplate}"
                ItemsSource="{Binding Folder.BreadCrumb.Items}"
                OverFlow="..."
                Seperator="&gt;"
                Visibility="{Binding Folder.BreadCrumb.HasPath, Converter={StaticResource BoolToVisibilityConverter}}" />
        </Grid>
        <Grid 
            Grid.Row="1"
            Visibility="{Binding Folder.ItemCollection.Items, Converter={StaticResource CollectionVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <ContentControl Template="{StaticResource SelectAllCheckBoxWithOrderTypeAndNumberOfItems}"/>
                    <ContentControl Template="{StaticResource OrderTypeAndNumberOfItems}"/>
                </Grid>
                <Button
                    x:Name="FolderOptionsButton"
                    Grid.Column="1" 
                    Content="{Binding FolderOptionsText, Mode=OneTime}" 
                    FontSize="14"
                    MinWidth="136"
                    Click="OnFolderOptionsButtonClicked"
                    IsEnabled="{x:Bind ViewModel.IsNetworkAvailable, Mode=OneWay}"
                    Visibility="{Binding FolderOptionsButtonVisibility}"/>
            </Grid>
            <Grid Grid.Row="1">
                <ListView
                    x:Name="ListView"
                    ContainerContentChanging="OnContainerContentChanging"
                    DoubleTapped="OnItemDoubleTapped"
                    IsMultiSelectCheckBoxEnabled="{Binding Folder.ItemCollection.IsMultiSelectActive}"
                    ItemContainerStyle="{StaticResource StretchedListviewItemStyle}"
                    ItemTemplateSelector="{Binding Folder.NodeTemplateSelector}"
                    ItemsSource="{Binding Folder.ItemCollection.Items}"
                    Loaded="OnListViewLoaded"
                    RightTapped="OnRightItemTapped"
                    Tapped="OnItemTapped"
                    Visibility="{Binding Folder.IsListViewMode, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                    <interactivity:Interaction.Behaviors>
                        <behaviors:MultiSelect SelectedItems="{Binding Folder.ItemCollection.SelectedItems, Mode=TwoWay}" />
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:EventTriggerBehavior.Actions>
                                <core:InvokeCommandAction Command="{Binding Folder.ItemCollection.SelectionChangedCommand}" />
                            </core:EventTriggerBehavior.Actions>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ListView>
                <GridView
                    x:Name="GridView"
                    Padding="2,4"
                    ContainerContentChanging="OnContainerContentChanging"
                    DoubleTapped="OnItemDoubleTapped"
                    IsMultiSelectCheckBoxEnabled="{Binding Folder.ItemCollection.IsMultiSelectActive}"
                    ItemTemplateSelector="{Binding Folder.NodeTemplateSelector}"
                    ItemsSource="{Binding Folder.ItemCollection.Items}"
                    Loaded="OnListViewLoaded"
                    RightTapped="OnRightItemTapped"
                    Tapped="OnItemTapped"
                    Visibility="{Binding Folder.IsGridViewMode, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
                    <interactivity:Interaction.Behaviors>
                        <behaviors:MultiSelect SelectedItems="{Binding Folder.ItemCollection.SelectedItems, Mode=TwoWay}" />
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:EventTriggerBehavior.Actions>
                                <core:InvokeCommandAction Command="{Binding Folder.ItemCollection.SelectionChangedCommand}" />
                            </core:EventTriggerBehavior.Actions>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </GridView>
            </Grid>
        </Grid>
        <ContentControl
            x:Name="EmptyState"
            Grid.Row="1"
            DataContext="{Binding Folder}" 
            Template="{StaticResource EmptyStateTemplate}" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListView.SelectionMode" Value="Extended" />
                        <Setter Target="GridView.SelectionMode" Value="Extended" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyStateTrigger DeviceFamily="Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListView.SelectionMode" Value="Single" />
                        <Setter Target="GridView.SelectionMode" Value="Single" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListView.Margin" Value="-12,0,-12,0" />
                        <Setter Target="GridView.Margin" Value="0,0,-12,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListView.Margin" Value="-12,0,0,0" />
                        <Setter Target="GridView.Margin" Value="0,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListView.Margin" Value="-12,0,0,0" />
                        <Setter Target="GridView.Margin" Value="0,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</userControls:BaseFolderExplorer>
